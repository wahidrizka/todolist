name: Publish Release image (GHCR)

on:
    release:
        types: [ published ]
    workflow_dispatch:
        inputs:
            tag:
                description: "Release tag (e.g. v0.3.3)"
                required: true
                default: v0.3.3

permissions:
    contents: read
    packages: write

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push:
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with: { fetch-depth: 0 }

            -   name: Resolve tag
                id: vars
                run: |
                    if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
                      TAG="${{ github.event.inputs.tag }}"
                    else
                      TAG="${{ github.event.release.tag_name }}"
                    fi
                    TAG="${TAG#refs/tags/}"
                    TAG="${TAG#v}"
                    echo "tag=$TAG" >> $GITHUB_OUTPUT
                    echo "sha=${GITHUB_SHA}" >> $GITHUB_OUTPUT

            -   name: Login to GHCR
                uses: docker/login-action@v3
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3
            -   name: Set up Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Build & push image
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    build-args: |
                        APP_VERSION=${{ steps.vars.outputs.tag }}
                        GIT_SHA=${{ steps.vars.outputs.sha }}
                        GIT_REF=${{ steps.vars.outputs.tag }}
                    tags: |
                        ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
                        ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                    labels: |
                        org.opencontainers.image.source=${{ github.repositoryUrl }}
                        org.opencontainers.image.version=${{ steps.vars.outputs.tag }}
                        org.opencontainers.image.revision=${{ steps.vars.outputs.sha }}
