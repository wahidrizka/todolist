name: Publish Release image (GHCR)

on:
    release:
        types: [ published ]
    # fallback: kalau event 'release' tidak memicu karena dibuat oleh Actions
    workflow_run:
        workflows: [ "Release Please" ]
        types: [ completed ]
    workflow_dispatch:
        inputs:
            tag:
                description: 'Release tag (mis. v0.3.1)'
                required: true

permissions:
    contents: read
    packages: write

concurrency:
    group: publish-release-${{ github.ref_name }}
    cancel-in-progress: false

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-push:
        if: >
            github.event_name == 'release' ||
            (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success') ||
            github.event_name == 'workflow_dispatch'
        runs-on: ubuntu-latest
        steps:
            -   name: Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0

            -   name: Resolve tag
                id: vars
                env:
                    GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                run: |
                    case "${{ github.event_name }}" in
                      release)
                        TAG="${{ github.event.release.tag_name }}"
                        ;;
                      workflow_dispatch)
                        TAG="${{ github.event.inputs.tag }}"
                        ;;
                      workflow_run)
                        # ambil tag rilis terbaru yang baru dibuat Release Please
                        TAG="$(gh release view --repo "$GITHUB_REPOSITORY" --json tagName -q .tagName)"
                        ;;
                    esac
                    TAG="${TAG#refs/tags/}"
                    echo "tag=$TAG" >> "$GITHUB_OUTPUT"
                    echo "sha=${GITHUB_SHA}" >> "$GITHUB_OUTPUT"

            -   name: Login to GHCR
                uses: docker/login-action@v3
                with:
                    registry: ${{ env.REGISTRY }}
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Set up QEMU
                uses: docker/setup-qemu-action@v3

            -   name: Set up Buildx
                uses: docker/setup-buildx-action@v3

            -   name: Build & push image
                uses: docker/build-push-action@v6
                with:
                    context: .
                    file: ./Dockerfile
                    push: true
                    build-args: |
                        APP_VERSION=${{ steps.vars.outputs.tag }}
                        GIT_SHA=${{ steps.vars.outputs.sha }}
                        GIT_REF=${{ steps.vars.outputs.tag }}
                    tags: |
                        ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.vars.outputs.tag }}
                        ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest
                    labels: |
                        org.opencontainers.image.source=${{ github.repositoryUrl }}
                        org.opencontainers.image.version=${{ steps.vars.outputs.tag }}
                        org.opencontainers.image.revision=${{ steps.vars.outputs.sha }}
